# this parameter can be used to try different SVM c-values post-mortem; it will cause
# the GA to be skipped - instead, the best hypothesis from a previously executed run
# will be read in and utilized for the analysis
crktaga.do.not.run.ga.read.in.prev.best=true
# create an ensemble from best hypotheses in final generation?
crktaga.create.ensemble=true
# repeated penalty based on original score
crktaga.penalize.initial.score=true
# a way to encourage diversity in the ensemble (higher number means stronger encouragement)
crktaga.diversity.encouragement=2
# number of hypotheses to use as ensemble candidates
crktaga.num.ensemble.candidates=15
# number of hypotheses to use in the ensemble
crktaga.num.ensemble.member=5
# use naive (vs diverse)?
crktaga.naive.ensemble=false
# parameters to search for final hypotheses to be used for ensemble (improve hypotheses and then create ensemble)
crktaga.kernel.parameter.degrees=1,2,3,4
crktaga.kernel.parameter.gammas=0.01,0.1,1,10
crktaga.kernel.parameter.coef0s=0.01,0.1,1,10
# c values to search
crktaga.svm.c.values=0.01,0.1,1,10
crktaga.path.to.last.gen=/home/Ben/EXPERIMENTS/MUTAGENESIS/188/CKTA_NotDiverse_Gauss1/FOLD0/GEN_29
# best hypothesis to use (for post-mortem c-param search only - not used for ensembles)
crktaga.path.to.prev.best=/home/Ben/EXPERIMENTS/MUTAGENESIS/188/CKTA_Diverse_Gauss1/FOLD0/bestHypothesis.pl

# population and num generations for GA
crktaga.population.size=20
crktaga.number.of.generations=20

# if this is non-zero, the max of 1 or this number times the population size rounded down is used for elite survival
# this number should be between 0 and 1
crktaga.elite.survival.rate=0.1

# the crossover values (p[0-3]) should sum to 1
crktaga.crossover.params.p0=0.0
crktaga.crossover.params.p1=0.05
crktaga.crossover.params.p2=0.3
crktaga.crossover.params.p3=0.65

# this encourages a different "second parent" when breeding
crktaga.diversity.boost=false

# This ONLY applies to accuracy while training. The final reported accuracy is not weighted.
# This is incorporated in order to emulate Logenpro
crktaga.weighted.accuracy=false

# RANDOM = 0; ACCURACY = 1; CENTERED_KTA = 2; ACCURACY_TIMES_CENTERED_KTA = 3; CENTERED_KTA_LOG_ACCURACY = 4
crktaga.scoring.type=3

# the kernel type to use. the supported types are as follows:
#
# 0 -- linear: u'*v
# 1 -- polynomial: (gamma*u'*v + coef0)^degree
# 2 -- radial basis function: exp(-gamma*|u-v|^2)
# 3 -- sigmoid: tanh(gamma*u'*v + coef0)
#
# note that the gamma, coef0, and degree in the above formulas correspond to the properties below
crktaga.kernel.parameter.type=2
crktaga.kernel.parameter.degree=1
crktaga.kernel.parameter.gamma=1.0
crktaga.kernel.parameter.coef0=1.0

# we use refinements for mutation - note that functions ARE NOT supported in the refinement
crktaga.mutation.prob=0.5
crktaga.mutation.downward.refinement.prob=0.5

# these 3 params should sum to 1
crktaga.mutation.downward.params.constant.sub=0.33
crktaga.mutation.downward.params.variable.sub=0.34
crktaga.mutation.downward.params.literal.addition=0.33
# ignore anything which has a toString matching the following when performing mutation
# this pattern is really meant to ignore example names from background theories (i.e.
# to differentiate these from variables that can be refined)
crktaga.mutation.ignore.pattern=(d[0-9].*)|(e[0-9].*)|(f[0-9].*)
crktaga.mutation.atom.ignore.pattern=(!)|(\.)|(name)|(set)
# prob of adding the literal to the head of the clause
crktaga.mutation.downward.params.literal.addition.positive=0.5

# these 3 params should sum to 1
crktaga.mutation.upward.params.constant.sub=0.33
crktaga.mutation.upward.params.variable.sub=0.34
# note that literal removal may not be possible if there is no
# literal which is most general with respect to the remainder
# of the clause chosen for mutation
crktaga.mutation.upward.params.literal.removal=0.33


aleph.background.file=/home/Ben/EXPERIMENTS/MUTAGENESIS/188/CKTA_NotDiverse_Gauss1/FOLD0/mutagenesis.b
aleph.hypothesis.negative.example.file=/home/Ben/EXPERIMENTS/MUTAGENESIS/188/CKTA_NotDiverse_Gauss1/FOLD0/mutagenesis.n
aleph.hypothesis.positive.example.file=/home/Ben/EXPERIMENTS/MUTAGENESIS/188/CKTA_NotDiverse_Gauss1/FOLD0/mutagenesis.f

cktaga.test.data.file=/home/Ben/EXPERIMENTS/MUTAGENESIS/188/CKTA_NotDiverse_Gauss1/FOLD0/testdata.txt
cktaga.test.data.pos.token=<POS>
cktaga.test.data.neg.token=<NEG>

aleph.hypothesis.output.initial.string=generated_theory_
crktaga.background.file=/home/Ben/EXPERIMENTS/MUTAGENESIS/188/CKTA_NotDiverse_Gauss1/FOLD0/mutagenesis.b.sans_modes
crktaga.generation.output=/home/Ben/Aleph/Mutagenesis/188/GA_OUTPUT
aleph.location=/home/Ben/Aleph/Mutagenesis/42/aleph.pl
yap.location=/usr/local/bin/yap
perl.location=/usr/bin/perl
